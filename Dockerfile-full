# Use Rust base image and install Python 3.12 explicitly
# Start from Rust base image
FROM rust:latest

# Install build dependencies and lldb
RUN apt-get update && \
    apt-get install -y lldb build-essential wget libssl-dev zlib1g-dev \
    libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev \
    libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev \
    libffi-dev uuid-dev && \
    rm -rf /var/lib/apt/lists/*

# Install Python 3.12 from source
ENV PYTHON_VERSION=3.12.0
RUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \
    tar xzf Python-${PYTHON_VERSION}.tgz && \
    cd Python-${PYTHON_VERSION} && \
    ./configure --enable-optimizations --enable-shared && \
    make -j$(nproc) && \
    make altinstall && \
    cd .. && \
    rm -rf Python-${PYTHON_VERSION}* 

# Set Python 3.12 as the default python3 and pip3, and update linker cache for libpython3.12.so
RUN ln -sf /usr/local/bin/python3.12 /usr/bin/python3 && \
    ln -sf /usr/local/bin/pip3.12 /usr/bin/pip3 && \
    ldconfig

RUN useradd -m -r -s /bin/bash appuser
COPY requirements.txt  /tmp/
# Install pip for Python 3.12 and install requirements
RUN wget https://bootstrap.pypa.io/get-pip.py && \
    /usr/local/bin/python3.12 get-pip.py && \
    rm get-pip.py && \
    /usr/local/bin/python3.12 -m pip install --no-input --break-system-packages -r /tmp/requirements.txt

WORKDIR /app
COPY . .
RUN chown -R appuser:appuser /app
USER appuser

# Build the release version of the application
RUN cargo build --release

# Move the file outside target. Target directory will be deleted
RUN cp /app/target/release/sravz sravz

# Clean up
RUN find ./ -type f -name "*.rs" -exec rm -f {} \;
RUN rm -f Cargo.* Dockerfile env Makefile *.md *.txt
RUN rm -rf tests target

HEALTHCHECK  --interval=10m --timeout=30s CMD bash healthcheck.sh > /dev/null || exit 1

# Run sravz on start up
CMD ["./sravz"]
